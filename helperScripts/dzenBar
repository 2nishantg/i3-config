#!/bin/sh

# -------------------------
# Dzen settings & Variables
# -------------------------
ICONPATH="$HOME/.i3/.xbm/"
CRIT_COLOR="#BA4040"
COLOR_ICON="#1E90FF"
DZEN_FG="#ffffff"
DZEN_BG="#000000"
HEIGHT=26
WIDTH=1290
RESOLUTIONW=1920
RESOLUTIONH=1080
X=533
Y=1060
BLUE="#1E90FF"
BAR_FG="#FF0000"
BAR_BG="#FFFFFF"
SEPERATOR="#ffff00"
BAR_H=10
BAR_W=80
FONT="-*-Inconsolata-medium-r-*-*-15-*-*-*-*-*-iso10646-*"
SLEEP=1
VUP="amixer -c0 -q set Master 4dB+"
VDOWN="amixer -c0 -q set Master 4dB-"
EVENT="button3=exit;button4=exec:$VUP;button5=exec:$VDOWN"
DZEN="dzen2 -x $X -y $Y -w $WIDTH -h $HEIGHT -fn $FONT -ta right -bg $DZEN_BG -fg $DZEN_FG -e "button3=exit;button4=exec:$VUP;button5=exec:$VDOWN""
NUMBER=60
LAST=59  #Set it to NUMBER-1 , no need to calculate again and again.
index=0

#colors
base03="#002b36"
base02="#073642"
base01="#586e75"
base00="#657b83"
base0="#839496"
base1="#93a1a1"
base2="#eee8d5"
base3="#fdf6e3"
yellow="#FFFF00"
orange="#FF4300"
red="#dc322f"
magenta="#d33682"
violet="#6c71c4"
blue="#268bd2"
cyan="#2aa198"
green="#009900"



#values=(2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 )
# -------------
# Infinite loop
# -------------
while :; do
sleep ${SLEEP}

# ---------
# Functions
# ---------
Window ()
{
    NAME=$(xdotool getactivewindow getwindowname| cut -c1-50)
    echo -n "^fg($base01)${NAME}"
    return
}

CPU ()
{
    CPU=$( grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {print usage "%"}')
    echo -n " ^fg($COLOR_ICON)^i($ICONPATH/cpu.xbm) ^fg()" $(echo $CPU | gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -w $BAR_W -s o -ss 0 -sw 2 -nonl )
    echo -n " "
  }

Vol ()
{
	ONF=$(amixer get Master | awk '/Front\ Left:/ {print $7}' | tr -d '[]')
	VOL=$(amixer get Master | awk '/Front\ Left:/ {print $5}' | tr -d '[]%')
		if [[ ${ONF} == 'off' ]] ; then
		   echo -n "^fg($CRIT_COLOR)^i($ICONPATH/spkr_01.xbm)^fg()" $(echo "0"  | gdbar -fg "#DEDEDE" -bg $BAR_BG -h $BAR_H -w $BAR_W -s o -ss 1 -sw 2 -nonl)
		else
		   echo -n "^fg($COLOR_ICON)^i($ICONPATH/spkr_01.xbm)^fg()"  $(echo $VOL | gdbar -fg $BAR_FG -bg $BAR_BG -max 155  -h $BAR_H -w $BAR_W -s o -ss 0 -sw 2 -nonl)
		fi
    return
}

Mem ()
{
#	MEM=$(free -m | grep '-' | awk '{print $3}')
	echo -n "^fg($COLOR_ICON)^i($ICONPATH/mem.xbm) ^fg(#F5F5F5)^r(1x26)^fg(#F5F5F5)"
  if [ ${index} -ge 1 ] ; then
      for i in $(eval echo {$((${index}-1))..0})
      do
          echo -n "^r(1x${values[${i}]})"
      done
  fi
  for i in $(eval echo {${LAST}..$((${index}))})
  do
      echo -n "^r(1x${values[${i}]})"
  done
  echo -n "^fg(#F5F5F5)^r(1x26) "
	return
}

Temp ()
{
	TEMP=$(acpi -t | awk '{print $4}' | tr -d '.0')
		if [[ ${TEMP} -gt 63 ]] ; then
			echo -n "^fg($CRIT_COLOR)^i($ICONPATH/temp.xbm)^fg($CRIT_COLOR) ${TEMP}°C" $(echo ${TEMP} | gdbar -fg $CRIT_COLOR -bg $BAR_BG -h $BAR_H -s v -sw 5 -ss 0 -sh 1 -nonl)
		else
			echo -n "^fg($COLOR_ICON)^i($ICONPATH/temp.xbm)^fg() ${TEMP}°C" $(echo ${TEMP} | gdbar -fg $BAR_FG -bg $BAR_BG -h $BAR_H -s v -sw 5 -ss 0 -sh 1 -nonl)
		fi
	return
}

Battery ()
{
  BAT=$(acpi | grep -o '[0-9]*%')
  CHARGE=$(acpi | cut -c 12)
  if [[ ${CHARGE} == 'C' ]] ; then
  echo -n "^ca(1, ~/.i3/helperScripts/battery-state.sh )^fg($COLOR_ICON)^i($ICONPATH/power-ac.xbm)^fg() ${BAT} " $(echo $BAT | gdbar -fg "#27ae60" -h 16 -max 98  -s v -sw 10 -ss 0 -sh 1 -nonl)
  else
  if [[ ${CHARGE} == 'F' ]] ; then
      echo -n "^ca(1, ~/.i3/helperScripts/battery-state.sh  )^fg(#27AE60)^i($ICONPATH/power-ac.xbm)^fg(#FFFFFF) ${BAT} "
  else
      echo -n "^ca(1, ~/.i3/helperScripts/battery-state.sh  )^fg($COLOR_ICON)^i($ICONPATH/bat_full_02.xbm)^fg() ${BAT}" $(echo $BAT | gdbar -fg "#DC322F" -h 16 -max 98  -s v -sw 10  -ss 0 -sh 1 -nonl)
  fi
  fi
  echo -n "^ca()"
  return
}

Ip ()
{
    IP=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}')
    echo -n  "^fg($COLOR_ICON)^i($ICONPATH/link.xbm) ^fg($base1)${IP}"
    return
}


Speed ()
{
	SPEED=$(/home/nis/.i3/helperScripts/measure-net-speed.bash)
	echo -n "$SPEED "
	return
}



Date ()
{
	TIME=$(date +%R)
  echo -n " ^ca(1, ~/.i3/helperScripts/time-date.sh )^fg($COLOR_ICON)^i($ICONPATH/clock.xbm)^fg() ${TIME}^ca()"
	return
}

Between ()
{
    echo -n " ^fg($SEPERATOR)^r(2x5)^fg() "
	return
}

OSLogo ()
{
   echo -n "^fg(#1793d0) ^fn(Ionicons,17)A^fn()^fg()"
	return
}

Wifi ()
{
	echo -n " ^fg($COLOR_ICON)^i($ICONPATH/wifi_02.xbm)^fg()"
	return
}


# --------- End Of Functions

# -----
# Print
# -----
Print () {
    Window
		OSLogo
    CPU
    Mem
    Ip
    Between
    Speed
    Battery
    Date
    return
}

echo "$(Print)"
values[$index]=$(($(free -m | grep 'Mem' | awk '{print $3}')*26/8192))
index=$((${index}+1))
index=$((${index}%${NUMBER}))
#done
done | $DZEN &
